// <auto-generated />
using System;
using Alsoft.Recruitment.FoodStore.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Alsoft.Recruitment.FoodStore.DAL.Migrations
{
    [DbContext(typeof(AlsoftFoodStoreContext))]
    [Migration("20220620015259_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.Enumerations.DiscountType.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<Guid>("DiscountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TargetProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DiscountTypeId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7195f0a1-ed36-4817-acb8-70ec69501178"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 358, DateTimeKind.Local).AddTicks(6158),
                            DateFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            DiscountPercentage = 10.0,
                            DiscountTypeId = new Guid("0c390e11-691a-4627-9953-d5d1adfb983a")
                        });
                });

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.Enumerations.DiscountType.DiscountTypeEnumEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnumerationId")
                        .HasColumnType("int");

                    b.Property<string>("EnumerationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiscountTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c390e11-691a-4627-9953-d5d1adfb983a"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 355, DateTimeKind.Local).AddTicks(2743),
                            Deleted = false,
                            EnumerationId = 1,
                            EnumerationName = "DiscountType",
                            TypeId = new Guid("92bd474e-13d6-3831-9536-44eb75ac962a")
                        },
                        new
                        {
                            Id = new Guid("96b66163-9c3b-4de4-8671-15242cdf6892"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 356, DateTimeKind.Local).AddTicks(5645),
                            Deleted = false,
                            EnumerationId = 2,
                            EnumerationName = "DiscountType",
                            TypeId = new Guid("92bd474e-13d6-3831-9536-44eb75ac962a")
                        },
                        new
                        {
                            Id = new Guid("dc2ee7b8-aa70-4c44-b208-b18574507959"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 356, DateTimeKind.Local).AddTicks(5700),
                            Deleted = false,
                            EnumerationId = 3,
                            EnumerationName = "DiscountType",
                            TypeId = new Guid("92bd474e-13d6-3831-9536-44eb75ac962a")
                        });
                });

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.Enumerations.UnitType.UnitTypeEnumEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnumerationId")
                        .HasColumnType("int");

                    b.Property<string>("EnumerationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UnitTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c4df377-0c6d-4a36-88d5-0ea46818edb9"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(2137),
                            Deleted = false,
                            EnumerationId = 3,
                            EnumerationName = "UnitType",
                            TypeId = new Guid("3a4529b2-6f93-3b11-94cc-cdc25ef5c89d")
                        },
                        new
                        {
                            Id = new Guid("c59a689d-89fa-48ca-9e4a-c2d27ece412c"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(2195),
                            Deleted = false,
                            EnumerationId = 1,
                            EnumerationName = "UnitType",
                            TypeId = new Guid("3a4529b2-6f93-3b11-94cc-cdc25ef5c89d")
                        },
                        new
                        {
                            Id = new Guid("e7e28ccf-4c0c-4299-b854-07c8a4b8420f"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(2226),
                            Deleted = false,
                            EnumerationId = 4,
                            EnumerationName = "UnitType",
                            TypeId = new Guid("3a4529b2-6f93-3b11-94cc-cdc25ef5c89d")
                        },
                        new
                        {
                            Id = new Guid("0fd52a86-6972-4f05-9cbf-14c8524f91d9"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(2255),
                            Deleted = false,
                            EnumerationId = 5,
                            EnumerationName = "UnitType",
                            TypeId = new Guid("3a4529b2-6f93-3b11-94cc-cdc25ef5c89d")
                        },
                        new
                        {
                            Id = new Guid("090b50b4-51cf-4bb9-89a8-4bbb26eb7342"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(2282),
                            Deleted = false,
                            EnumerationId = 2,
                            EnumerationName = "UnitType",
                            TypeId = new Guid("3a4529b2-6f93-3b11-94cc-cdc25ef5c89d")
                        });
                });

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("598b7145-5444-454d-a619-81ca82f506de"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(2673),
                            Deleted = false,
                            Name = "Soup",
                            Price = 0.65m,
                            UnitTypeId = new Guid("c59a689d-89fa-48ca-9e4a-c2d27ece412c")
                        },
                        new
                        {
                            Id = new Guid("34f233bb-1ab8-4107-96ab-42c67321745e"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(3345),
                            Deleted = false,
                            Name = "Bread",
                            Price = 0.80m,
                            UnitTypeId = new Guid("c59a689d-89fa-48ca-9e4a-c2d27ece412c")
                        },
                        new
                        {
                            Id = new Guid("6cd1c643-e710-4115-92b1-678925181d7b"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(3379),
                            Deleted = false,
                            Name = "Roll",
                            Price = 0.30m,
                            UnitTypeId = new Guid("c59a689d-89fa-48ca-9e4a-c2d27ece412c")
                        },
                        new
                        {
                            Id = new Guid("96af5685-6900-4345-ab1f-afcf5cf4e23c"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(3408),
                            Deleted = false,
                            Name = "Full-Cream Milk",
                            Price = 1.60m,
                            UnitTypeId = new Guid("c59a689d-89fa-48ca-9e4a-c2d27ece412c")
                        },
                        new
                        {
                            Id = new Guid("b1bb369e-2d55-44c1-bb37-7a88aea04eef"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(3436),
                            Deleted = false,
                            Name = "Low Fat Milk",
                            Price = 1.60m,
                            UnitTypeId = new Guid("c59a689d-89fa-48ca-9e4a-c2d27ece412c")
                        },
                        new
                        {
                            Id = new Guid("c055f571-5e0b-4e4e-8f8a-759db75d00ab"),
                            CreatedOn = new DateTime(2022, 6, 20, 3, 52, 59, 357, DateTimeKind.Local).AddTicks(3464),
                            Deleted = false,
                            Name = "Apples",
                            Price = 1.00m,
                            UnitTypeId = new Guid("c59a689d-89fa-48ca-9e4a-c2d27ece412c")
                        });
                });

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.ProductProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductProperties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f029c5e-4433-4cd0-ae6a-677be0c1e3e2"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Flavour",
                            ProductId = new Guid("598b7145-5444-454d-a619-81ca82f506de"),
                            StringValue = "Chicken"
                        },
                        new
                        {
                            Id = new Guid("19fce08f-5e9c-4d01-9acd-c9a53a8fbd7c"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Calories",
                            ProductId = new Guid("34f233bb-1ab8-4107-96ab-42c67321745e"),
                            StringValue = "251"
                        },
                        new
                        {
                            Id = new Guid("118aece2-2c32-4dac-bd42-7f66e230d9b9"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Flavour",
                            ProductId = new Guid("6cd1c643-e710-4115-92b1-678925181d7b"),
                            StringValue = "Chicken"
                        },
                        new
                        {
                            Id = new Guid("e35732bc-520b-492e-9210-7580ffcfc071"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Fat Percentage",
                            ProductId = new Guid("96af5685-6900-4345-ab1f-afcf5cf4e23c"),
                            StringValue = "3,2"
                        },
                        new
                        {
                            Id = new Guid("c5674188-6e70-44f1-9dba-83f7b1c04dfe"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Fat Percentage",
                            ProductId = new Guid("b1bb369e-2d55-44c1-bb37-7a88aea04eef"),
                            StringValue = "1,5"
                        },
                        new
                        {
                            Id = new Guid("407b5697-ce5f-4b3d-b737-71bcee70b1ff"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Origin",
                            ProductId = new Guid("c055f571-5e0b-4e4e-8f8a-759db75d00ab"),
                            StringValue = "Poland"
                        });
                });

            modelBuilder.Entity("DiscountProduct", b =>
                {
                    b.Property<Guid>("DiscountsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DiscountsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("DiscountProduct");
                });

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.Enumerations.DiscountType.Discount", b =>
                {
                    b.HasOne("Alsoft.Recruitment.FoodStore.Entities.Enumerations.DiscountType.DiscountTypeEnumEntity", "DiscountType")
                        .WithMany("Discounts")
                        .HasForeignKey("DiscountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscountType");
                });

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.Product", b =>
                {
                    b.HasOne("Alsoft.Recruitment.FoodStore.Entities.Enumerations.UnitType.UnitTypeEnumEntity", "UnitType")
                        .WithMany("Products")
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.ProductProperty", b =>
                {
                    b.HasOne("Alsoft.Recruitment.FoodStore.Entities.Product", "Product")
                        .WithMany("ProductProperties")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiscountProduct", b =>
                {
                    b.HasOne("Alsoft.Recruitment.FoodStore.Entities.Enumerations.DiscountType.Discount", null)
                        .WithMany()
                        .HasForeignKey("DiscountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alsoft.Recruitment.FoodStore.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.Enumerations.DiscountType.DiscountTypeEnumEntity", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.Enumerations.UnitType.UnitTypeEnumEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Alsoft.Recruitment.FoodStore.Entities.Product", b =>
                {
                    b.Navigation("ProductProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
